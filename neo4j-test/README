Building

Griffon
1. Grab a copy of Griffon's latest trunk from git://git.codehaus.org/griffon-git.git
2. Make sure you have Ant installed. Download from http://ant.apache.org
3. Configure GRIFFON_HOME to point to a directory of your choosing
4. type 'ant install'. This will compile, package and install griffon at $GRIFFON_HOME

Neo4j Plugin
1. Grab a copy of the plugin's latest version from http://svn.codehaus.org/griffon/plugins/griffon-neo4j/trunk
2. Type 'griffon package-plugin -nodoc'
3. You'll get a griffon-neo4j-0.1.zip file as a result

Installing the plugin
1. Change directory to neo4j-test
2. Type 'griffon install-plugin /path/to/griffon-neo4j-0.1.zip'

Running the application
1. Type 'griffon run-app'

This application proves the following:
1. Griffon can launch an embedded graph database
2. A dynamic method withNeo4j() is added to controllers
3. Dynamic enhancements are added to Node, RelationShip and IndexService

Node and Relationship classes have the following enhanced methods
- Object getAt(String name) => enables array subscript notation to get a property.
- void putAt(String name, Object value) => enables array subscript notation to set a  property.

Node has the following additional methods
- Relationship relate(RelationShiptType type, Node other) => another way to call node.createRelationshipTo(Node, RelationshipType)
- indexBy(String propertyName) => shortcut for indexService.index(node, propertyName, node.getProperty(propertyName))
- indexBy(List<String> properties) => shortcut for properties.each { p -> indexService.index(node, p, node[p]) }
